#!/usr/bin/env python

from waflib import TaskGen
from waflib.Task import Task
from waflib.TaskGen import extension

import os

TaskGen.task_gen.mappings['.cc'] = TaskGen.task_gen.mappings['.cpp']

UNAME = os.uname()[0]
if UNAME == "Darwin":
    platformDefine = "DARWIN"
elif UNAME.startswith("CYGWIN"):
    platformDefine = "WINDOWS"
else:
    platformDefine == "UNIX"

class proto(Task):
    run_str = '${PROTOC} -I=../src/network/messages --cpp_out=src/network/messages ${SRC}'
    color = 'BLUE'
    ext_out = [".pb.cc", ".pb.h"]

@extension(".proto")
def process_proto(self, node):
    cc_node = node.change_ext('.pb.cc')
    h_node = node.change_ext('.pb.h')
    self.create_task("proto", node, [cc_node, h_node])
    self.source.append(cc_node)

def build(bld):
    protos = bld.program(source=bld.path.ant_glob("**/*proto"),
                         target="protos",
                         features="cxx")

    bld.add_group()

    sand = bld.program(source=bld.path.ant_glob("**/*cpp"),
                       target="game",
                       includes=". ../external/tinythread ../external/glfw ../build/src/network/messages ../external/uuid ../external/soil",
                       cxxflags="-g",
                       defines=platformDefine,
                       uselib="glog protobuf cairo opengl32",
                       use="tinythread glfw protos soil")
    if UNAME == "Darwin":
        sand.framework = "OpenGL CoreServices Cocoa"
